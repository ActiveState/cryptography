# This file is dual licensed under the terms of the Apache License, Version
# 2.0, and the BSD License. See the LICENSE file in the root of this repository
# for complete details.
INCLUDES = '\n\n#include <openssl/pem.h>\n\n'
TYPES = '\n\ntypedef int pem_password_cb(char *buf, int size, int rwflag, void *userdata);\n\n'
FUNCTIONS = '\n\nX509 *PEM_read_bio_X509(BIO *, X509 **, pem_password_cb *, void *);\n\nint PEM_write_bio_X509(BIO *, X509 *);\n\n\n\nint PEM_write_bio_PrivateKey(BIO *, EVP_PKEY *, const EVP_CIPHER *,\n\n                             unsigned char *, int, pem_password_cb *, void *);\n\n\n\nEVP_PKEY *PEM_read_bio_PrivateKey(BIO *, EVP_PKEY **, pem_password_cb *,\n\n                                 void *);\n\n\n\nint PEM_write_bio_PKCS8PrivateKey(BIO *, EVP_PKEY *, const EVP_CIPHER *,\n\n                                  char *, int, pem_password_cb *, void *);\n\n\n\nint i2d_PKCS8PrivateKey_bio(BIO *, EVP_PKEY *, const EVP_CIPHER *,\n\n                            char *, int, pem_password_cb *, void *);\n\n\n\nint i2d_PKCS7_bio(BIO *, PKCS7 *);\n\nPKCS7 *d2i_PKCS7_bio(BIO *, PKCS7 **);\n\n\n\nEVP_PKEY *d2i_PKCS8PrivateKey_bio(BIO *, EVP_PKEY **, pem_password_cb *,\n\n                                  void *);\n\n\n\nint PEM_write_bio_X509_REQ(BIO *, X509_REQ *);\n\n\n\nX509_REQ *PEM_read_bio_X509_REQ(BIO *, X509_REQ **, pem_password_cb *, void *);\n\n\n\nX509_CRL *PEM_read_bio_X509_CRL(BIO *, X509_CRL **, pem_password_cb *, void *);\n\n\n\nint PEM_write_bio_X509_CRL(BIO *, X509_CRL *);\n\n\n\nPKCS7 *PEM_read_bio_PKCS7(BIO *, PKCS7 **, pem_password_cb *, void *);\n\nint PEM_write_bio_PKCS7(BIO *, PKCS7 *);\n\n\n\nDH *PEM_read_bio_DHparams(BIO *, DH **, pem_password_cb *, void *);\n\n\n\nint PEM_write_bio_DSAPrivateKey(BIO *, DSA *, const EVP_CIPHER *,\n\n                                unsigned char *, int,\n\n                                pem_password_cb *, void *);\n\n\n\nint PEM_write_bio_RSAPrivateKey(BIO *, RSA *, const EVP_CIPHER *,\n\n                                unsigned char *, int,\n\n                                pem_password_cb *, void *);\n\n\n\nRSA *PEM_read_bio_RSAPublicKey(BIO *, RSA **, pem_password_cb *, void *);\n\n\n\nint PEM_write_bio_RSAPublicKey(BIO *, const RSA *);\n\n\n\nEVP_PKEY *PEM_read_bio_PUBKEY(BIO *, EVP_PKEY **, pem_password_cb *, void *);\n\nint PEM_write_bio_PUBKEY(BIO *, EVP_PKEY *);\n\nint PEM_write_bio_ECPrivateKey(BIO *, EC_KEY *, const EVP_CIPHER *,\n\n                               unsigned char *, int, pem_password_cb *,\n\n                               void *);\n\nint PEM_write_bio_DHparams(BIO *, DH *);\n\nint PEM_write_bio_DHxparams(BIO *, DH *);\n\n'
CUSTOMIZATIONS = '\n\n#if !defined(EVP_PKEY_DHX) || EVP_PKEY_DHX == -1\n\nint (*PEM_write_bio_DHxparams)(BIO *, DH *) = NULL;\n\n#endif\n\n'