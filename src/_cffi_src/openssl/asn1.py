# This file is dual licensed under the terms of the Apache License, Version
# 2.0, and the BSD License. See the LICENSE file in the root of this repository
# for complete details.
INCLUDES = '\n\n#include <openssl/asn1.h>\n\n'
TYPES = '\n\ntypedef int... time_t;\n\n\n\ntypedef ... ASN1_INTEGER;\n\n\n\nstruct asn1_string_st {\n\n    int length;\n\n    int type;\n\n    unsigned char *data;\n\n    long flags;\n\n};\n\n\n\ntypedef struct asn1_string_st ASN1_OCTET_STRING;\n\ntypedef struct asn1_string_st ASN1_IA5STRING;\n\ntypedef struct asn1_string_st ASN1_BIT_STRING;\n\ntypedef struct asn1_string_st ASN1_TIME;\n\ntypedef ... ASN1_OBJECT;\n\ntypedef struct asn1_string_st ASN1_STRING;\n\ntypedef struct asn1_string_st ASN1_UTF8STRING;\n\ntypedef struct {\n\n    int type;\n\n    ...;\n\n} ASN1_TYPE;\n\ntypedef ... ASN1_GENERALIZEDTIME;\n\ntypedef ... ASN1_ENUMERATED;\n\ntypedef ... ASN1_NULL;\n\n\n\nstatic const int V_ASN1_GENERALIZEDTIME;\n\n\n\nstatic const int MBSTRING_UTF8;\n\n'
FUNCTIONS = '\n\nvoid ASN1_OBJECT_free(ASN1_OBJECT *);\n\n\n\n/*  ASN1 STRING */\n\nunsigned char *ASN1_STRING_data(ASN1_STRING *);\n\nconst unsigned char *ASN1_STRING_get0_data(const ASN1_STRING *);\n\nint ASN1_STRING_set(ASN1_STRING *, const void *, int);\n\n\n\n/*  ASN1 OCTET STRING */\n\nASN1_OCTET_STRING *ASN1_OCTET_STRING_new(void);\n\nvoid ASN1_OCTET_STRING_free(ASN1_OCTET_STRING *);\n\nint ASN1_OCTET_STRING_set(ASN1_OCTET_STRING *, const unsigned char *, int);\n\n\n\n/* ASN1 IA5STRING */\n\nASN1_IA5STRING *ASN1_IA5STRING_new(void);\n\n\n\n/*  ASN1 INTEGER */\n\nvoid ASN1_INTEGER_free(ASN1_INTEGER *);\n\nint ASN1_INTEGER_set(ASN1_INTEGER *, long);\n\n\n\n/*  ASN1 TIME */\n\nASN1_TIME *ASN1_TIME_new(void);\n\nvoid ASN1_TIME_free(ASN1_TIME *);\n\nint ASN1_TIME_set_string(ASN1_TIME *, const char *);\n\n\n\n/*  ASN1 GENERALIZEDTIME */\n\nASN1_GENERALIZEDTIME *ASN1_GENERALIZEDTIME_set(ASN1_GENERALIZEDTIME *, time_t);\n\nvoid ASN1_GENERALIZEDTIME_free(ASN1_GENERALIZEDTIME *);\n\n\n\n/*  ASN1 ENUMERATED */\n\nASN1_ENUMERATED *ASN1_ENUMERATED_new(void);\n\nvoid ASN1_ENUMERATED_free(ASN1_ENUMERATED *);\n\nint ASN1_ENUMERATED_set(ASN1_ENUMERATED *, long);\n\n\n\nint ASN1_BIT_STRING_set_bit(ASN1_BIT_STRING *, int, int);\n\n/* These became const ASN1_* in 1.1.0 */\n\nint ASN1_STRING_type(ASN1_STRING *);\n\nint ASN1_STRING_to_UTF8(unsigned char **, ASN1_STRING *);\n\nlong ASN1_ENUMERATED_get(ASN1_ENUMERATED *);\n\nint i2a_ASN1_INTEGER(BIO *, ASN1_INTEGER *);\n\n\n\n/* This became const ASN1_TIME in 1.1.0f */\n\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *,\n\n                                                   ASN1_GENERALIZEDTIME **);\n\n\n\nASN1_UTF8STRING *ASN1_UTF8STRING_new(void);\n\nvoid ASN1_UTF8STRING_free(ASN1_UTF8STRING *);\n\n\n\nASN1_BIT_STRING *ASN1_BIT_STRING_new(void);\n\nvoid ASN1_BIT_STRING_free(ASN1_BIT_STRING *);\n\n/* This is not a macro, but is const on some versions of OpenSSL */\n\nint ASN1_BIT_STRING_get_bit(ASN1_BIT_STRING *, int);\n\n\n\nint ASN1_STRING_length(ASN1_STRING *);\n\nint ASN1_STRING_set_default_mask_asc(char *);\n\n\n\nBIGNUM *ASN1_INTEGER_to_BN(ASN1_INTEGER *, BIGNUM *);\n\nASN1_INTEGER *BN_to_ASN1_INTEGER(BIGNUM *, ASN1_INTEGER *);\n\n\n\nint i2d_ASN1_TYPE(ASN1_TYPE *, unsigned char **);\n\nASN1_TYPE *d2i_ASN1_TYPE(ASN1_TYPE **, const unsigned char **, long);\n\n\n\nASN1_NULL *ASN1_NULL_new(void);\n\n'
CUSTOMIZATIONS = '\n\n'