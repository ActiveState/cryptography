# This file is dual licensed under the terms of the Apache License, Version
# 2.0, and the BSD License. See the LICENSE file in the root of this repository
# for complete details.
INCLUDES = "\n\n#include <openssl/engine.h>\n\n"
TYPES = "\n\ntypedef ... ENGINE;\n\ntypedef ... UI_METHOD;\n\n\n\nstatic const long Cryptography_HAS_ENGINE;\n\n"
FUNCTIONS = "\n\nENGINE *ENGINE_by_id(const char *);\n\nint ENGINE_init(ENGINE *);\n\nint ENGINE_finish(ENGINE *);\n\nENGINE *ENGINE_get_default_RAND(void);\n\nint ENGINE_set_default_RAND(ENGINE *);\n\nvoid ENGINE_unregister_RAND(ENGINE *);\n\nint ENGINE_ctrl_cmd(ENGINE *, const char *, long, void *, void (*)(void), int);\n\nint ENGINE_free(ENGINE *);\n\nconst char *ENGINE_get_name(const ENGINE *);\n\n\n\n// These bindings are unused by cryptography or pyOpenSSL but are present\n\n// for advanced users who need them.\n\nint ENGINE_ctrl_cmd_string(ENGINE *, const char *, const char *, int);\n\nvoid ENGINE_load_builtin_engines(void);\n\nEVP_PKEY *ENGINE_load_private_key(ENGINE *, const char *, UI_METHOD *, void *);\n\nEVP_PKEY *ENGINE_load_public_key(ENGINE *, const char *, UI_METHOD *, void *);\n\n"
CUSTOMIZATIONS = "\n\n#ifdef OPENSSL_NO_ENGINE\n\nstatic const long Cryptography_HAS_ENGINE = 0;\n\n\n\nENGINE *(*ENGINE_by_id)(const char *) = NULL;\n\nint (*ENGINE_init)(ENGINE *) = NULL;\n\nint (*ENGINE_finish)(ENGINE *) = NULL;\n\nENGINE *(*ENGINE_get_default_RAND)(void) = NULL;\n\nint (*ENGINE_set_default_RAND)(ENGINE *) = NULL;\n\nvoid (*ENGINE_unregister_RAND)(ENGINE *) = NULL;\n\nint (*ENGINE_ctrl_cmd)(ENGINE *, const char *, long, void *,\n\n                       void (*)(void), int) = NULL;\n\n\n\nint (*ENGINE_free)(ENGINE *) = NULL;\n\nconst char *(*ENGINE_get_id)(const ENGINE *) = NULL;\n\nconst char *(*ENGINE_get_name)(const ENGINE *) = NULL;\n\n\n\nint (*ENGINE_ctrl_cmd_string)(ENGINE *, const char *, const char *,\n\n                              int) = NULL;\n\nvoid (*ENGINE_load_builtin_engines)(void) = NULL;\n\nEVP_PKEY *(*ENGINE_load_private_key)(ENGINE *, const char *, UI_METHOD *,\n\n                                     void *) = NULL;\n\nEVP_PKEY *(*ENGINE_load_public_key)(ENGINE *, const char *,\n\n                                    UI_METHOD *, void *) = NULL;\n\n\n\n#else\n\nstatic const long Cryptography_HAS_ENGINE = 1;\n\n#endif\n\n"
