# This file is dual licensed under the terms of the Apache License, Version
# 2.0, and the BSD License. See the LICENSE file in the root of this repository
# for complete details.
INCLUDES = "\n\n#include <openssl/bn.h>\n\n"
TYPES = "\n\ntypedef ... BN_CTX;\n\ntypedef ... BN_MONT_CTX;\n\ntypedef ... BIGNUM;\n\ntypedef int... BN_ULONG;\n\n"
FUNCTIONS = "\n\n#define BN_FLG_CONSTTIME ...\n\n\n\nvoid BN_set_flags(BIGNUM *, int);\n\n\n\nBIGNUM *BN_new(void);\n\nvoid BN_free(BIGNUM *);\n\nvoid BN_clear_free(BIGNUM *);\n\n\n\nint BN_rand_range(BIGNUM *, const BIGNUM *);\n\n\n\nBN_CTX *BN_CTX_new(void);\n\nvoid BN_CTX_free(BN_CTX *);\n\n\n\nvoid BN_CTX_start(BN_CTX *);\n\nBIGNUM *BN_CTX_get(BN_CTX *);\n\nvoid BN_CTX_end(BN_CTX *);\n\n\n\nBN_MONT_CTX *BN_MONT_CTX_new(void);\n\nint BN_MONT_CTX_set(BN_MONT_CTX *, const BIGNUM *, BN_CTX *);\n\nvoid BN_MONT_CTX_free(BN_MONT_CTX *);\n\n\n\nBIGNUM *BN_dup(const BIGNUM *);\n\n\n\nint BN_set_word(BIGNUM *, BN_ULONG);\n\n\n\nconst BIGNUM *BN_value_one(void);\n\n\n\nchar *BN_bn2hex(const BIGNUM *);\n\nint BN_hex2bn(BIGNUM **, const char *);\n\n\n\nint BN_bn2bin(const BIGNUM *, unsigned char *);\n\nBIGNUM *BN_bin2bn(const unsigned char *, int, BIGNUM *);\n\n\n\nint BN_num_bits(const BIGNUM *);\n\n\n\nint BN_cmp(const BIGNUM *, const BIGNUM *);\n\nint BN_is_negative(const BIGNUM *);\n\nint BN_add(BIGNUM *, const BIGNUM *, const BIGNUM *);\n\nint BN_sub(BIGNUM *, const BIGNUM *, const BIGNUM *);\n\nint BN_nnmod(BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *);\n\nint BN_mod_add(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *,\n\n               BN_CTX *);\n\nint BN_mod_sub(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *,\n\n               BN_CTX *);\n\nint BN_mod_mul(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *,\n\n               BN_CTX *);\n\nint BN_mod_exp(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *,\n\n               BN_CTX *);\n\nint BN_mod_exp_mont(BIGNUM *, const BIGNUM *, const BIGNUM *, const BIGNUM *,\n\n                    BN_CTX *, BN_MONT_CTX *);\n\nint BN_mod_exp_mont_consttime(BIGNUM *, const BIGNUM *, const BIGNUM *,\n\n                              const BIGNUM *, BN_CTX *, BN_MONT_CTX *);\n\nBIGNUM *BN_mod_inverse(BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *);\n\n\n\nint BN_num_bytes(const BIGNUM *);\n\n\n\nint BN_mod(BIGNUM *, const BIGNUM *, const BIGNUM *, BN_CTX *);\n\n\n\n/* The following 3 prime methods are exposed for Tribler. */\n\nint BN_generate_prime_ex(BIGNUM *, int, int, const BIGNUM *,\n\n                         const BIGNUM *, BN_GENCB *);\n\nint BN_is_prime_ex(const BIGNUM *, int, BN_CTX *, BN_GENCB *);\n\nconst int BN_prime_checks_for_size(int);\n\n"
CUSTOMIZATIONS = "\n\n"
