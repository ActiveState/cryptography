# This file is dual licensed under the terms of the Apache License, Version
# 2.0, and the BSD License. See the LICENSE file in the root of this repository
# for complete details.
INCLUDES = '\n\n#include <openssl/x509_vfy.h>\n\n\n\n/*\n\n * This is part of a work-around for the difficulty cffi has in dealing with\n\n * `STACK_OF(foo)` as the name of a type.  We invent a new, simpler name that\n\n * will be an alias for this type and use the alias throughout.  This works\n\n * together with another opaque typedef for the same name in the TYPES section.\n\n * Note that the result is an opaque type.\n\n */\n\ntypedef STACK_OF(ASN1_OBJECT) Cryptography_STACK_OF_ASN1_OBJECT;\n\ntypedef STACK_OF(X509_OBJECT) Cryptography_STACK_OF_X509_OBJECT;\n\n'
TYPES = "\n\nstatic const long Cryptography_HAS_110_VERIFICATION_PARAMS;\n\nstatic const long Cryptography_HAS_X509_STORE_CTX_GET_ISSUER;\n\n\n\ntypedef ... Cryptography_STACK_OF_ASN1_OBJECT;\n\ntypedef ... Cryptography_STACK_OF_X509_OBJECT;\n\n\n\ntypedef ... X509_OBJECT;\n\ntypedef ... X509_STORE;\n\ntypedef ... X509_VERIFY_PARAM;\n\ntypedef ... X509_STORE_CTX;\n\n\n\ntypedef int (*X509_STORE_CTX_get_issuer_fn)(X509 **, X509_STORE_CTX *, X509 *);\n\n\n\n/* While these are defined in the source as ints, they're tagged here\n\n   as longs, just in case they ever grow to large, such as what we saw\n\n   with OP_ALL. */\n\n\n\n/* Verification error codes */\n\nstatic const int X509_V_OK;\n\nstatic const int X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT;\n\nstatic const int X509_V_ERR_UNABLE_TO_GET_CRL;\n\nstatic const int X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE;\n\nstatic const int X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE;\n\nstatic const int X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY;\n\nstatic const int X509_V_ERR_CERT_SIGNATURE_FAILURE;\n\nstatic const int X509_V_ERR_CRL_SIGNATURE_FAILURE;\n\nstatic const int X509_V_ERR_CERT_NOT_YET_VALID;\n\nstatic const int X509_V_ERR_CERT_HAS_EXPIRED;\n\nstatic const int X509_V_ERR_CRL_NOT_YET_VALID;\n\nstatic const int X509_V_ERR_CRL_HAS_EXPIRED;\n\nstatic const int X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD;\n\nstatic const int X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD;\n\nstatic const int X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD;\n\nstatic const int X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD;\n\nstatic const int X509_V_ERR_OUT_OF_MEM;\n\nstatic const int X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT;\n\nstatic const int X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN;\n\nstatic const int X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY;\n\nstatic const int X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE;\n\nstatic const int X509_V_ERR_CERT_CHAIN_TOO_LONG;\n\nstatic const int X509_V_ERR_CERT_REVOKED;\n\nstatic const int X509_V_ERR_INVALID_CA;\n\nstatic const int X509_V_ERR_PATH_LENGTH_EXCEEDED;\n\nstatic const int X509_V_ERR_INVALID_PURPOSE;\n\nstatic const int X509_V_ERR_CERT_UNTRUSTED;\n\nstatic const int X509_V_ERR_CERT_REJECTED;\n\nstatic const int X509_V_ERR_SUBJECT_ISSUER_MISMATCH;\n\nstatic const int X509_V_ERR_AKID_SKID_MISMATCH;\n\nstatic const int X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH;\n\nstatic const int X509_V_ERR_KEYUSAGE_NO_CERTSIGN;\n\nstatic const int X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER;\n\nstatic const int X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION;\n\nstatic const int X509_V_ERR_KEYUSAGE_NO_CRL_SIGN;\n\nstatic const int X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION;\n\nstatic const int X509_V_ERR_INVALID_NON_CA;\n\nstatic const int X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED;\n\nstatic const int X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE;\n\nstatic const int X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED;\n\nstatic const int X509_V_ERR_INVALID_EXTENSION;\n\nstatic const int X509_V_ERR_INVALID_POLICY_EXTENSION;\n\nstatic const int X509_V_ERR_NO_EXPLICIT_POLICY;\n\nstatic const int X509_V_ERR_DIFFERENT_CRL_SCOPE;\n\nstatic const int X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE;\n\nstatic const int X509_V_ERR_UNNESTED_RESOURCE;\n\nstatic const int X509_V_ERR_PERMITTED_VIOLATION;\n\nstatic const int X509_V_ERR_EXCLUDED_VIOLATION;\n\nstatic const int X509_V_ERR_SUBTREE_MINMAX;\n\nstatic const int X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE;\n\nstatic const int X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX;\n\nstatic const int X509_V_ERR_UNSUPPORTED_NAME_SYNTAX;\n\nstatic const int X509_V_ERR_CRL_PATH_VALIDATION_ERROR;\n\nstatic const int X509_V_ERR_HOSTNAME_MISMATCH;\n\nstatic const int X509_V_ERR_EMAIL_MISMATCH;\n\nstatic const int X509_V_ERR_IP_ADDRESS_MISMATCH;\n\nstatic const int X509_V_ERR_APPLICATION_VERIFICATION;\n\n\n\n/* Verification parameters */\n\nstatic const long X509_V_FLAG_CB_ISSUER_CHECK;\n\nstatic const long X509_V_FLAG_USE_CHECK_TIME;\n\nstatic const long X509_V_FLAG_CRL_CHECK;\n\nstatic const long X509_V_FLAG_CRL_CHECK_ALL;\n\nstatic const long X509_V_FLAG_IGNORE_CRITICAL;\n\nstatic const long X509_V_FLAG_X509_STRICT;\n\nstatic const long X509_V_FLAG_ALLOW_PROXY_CERTS;\n\nstatic const long X509_V_FLAG_POLICY_CHECK;\n\nstatic const long X509_V_FLAG_EXPLICIT_POLICY;\n\nstatic const long X509_V_FLAG_INHIBIT_ANY;\n\nstatic const long X509_V_FLAG_INHIBIT_MAP;\n\nstatic const long X509_V_FLAG_NOTIFY_POLICY;\n\nstatic const long X509_V_FLAG_EXTENDED_CRL_SUPPORT;\n\nstatic const long X509_V_FLAG_USE_DELTAS;\n\nstatic const long X509_V_FLAG_CHECK_SS_SIGNATURE;\n\nstatic const long X509_V_FLAG_TRUSTED_FIRST;\n\nstatic const long X509_V_FLAG_PARTIAL_CHAIN;\n\nstatic const long X509_V_FLAG_NO_ALT_CHAINS;\n\nstatic const long X509_V_FLAG_NO_CHECK_TIME;\n\n\n\nstatic const long X509_LU_X509;\n\nstatic const long X509_LU_CRL;\n\n\n\nstatic const long X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT;\n\nstatic const long X509_CHECK_FLAG_NO_WILDCARDS;\n\nstatic const long X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\n\nstatic const long X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\n\nstatic const long X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\n\nstatic const long X509_CHECK_FLAG_NEVER_CHECK_SUBJECT;\n\n\n\n/* Included due to external consumer, see\n\n   https://github.com/pyca/pyopenssl/issues/1031 */\n\nstatic const long X509_PURPOSE_SSL_CLIENT;\n\nstatic const long X509_PURPOSE_SSL_SERVER;\n\nstatic const long X509_PURPOSE_NS_SSL_SERVER;\n\nstatic const long X509_PURPOSE_SMIME_SIGN;\n\nstatic const long X509_PURPOSE_SMIME_ENCRYPT;\n\nstatic const long X509_PURPOSE_CRL_SIGN;\n\nstatic const long X509_PURPOSE_ANY;\n\nstatic const long X509_PURPOSE_OCSP_HELPER;\n\nstatic const long X509_PURPOSE_TIMESTAMP_SIGN;\n\nstatic const long X509_PURPOSE_MIN;\n\nstatic const long X509_PURPOSE_MAX;\n\n"
FUNCTIONS = '\n\nint X509_verify_cert(X509_STORE_CTX *);\n\n\n\n/* X509_STORE */\n\nX509_STORE *X509_STORE_new(void);\n\nint X509_STORE_add_cert(X509_STORE *, X509 *);\n\nint X509_STORE_add_crl(X509_STORE *, X509_CRL *);\n\nint X509_STORE_load_locations(X509_STORE *, const char *, const char *);\n\nint X509_STORE_set1_param(X509_STORE *, X509_VERIFY_PARAM *);\n\nint X509_STORE_set_default_paths(X509_STORE *);\n\nint X509_STORE_set_flags(X509_STORE *, unsigned long);\n\n/* Included due to external consumer, see\n\n   https://github.com/pyca/pyopenssl/issues/1031 */\n\nint X509_STORE_set_purpose(X509_STORE *, int);\n\nvoid X509_STORE_free(X509_STORE *);\n\n\n\n/* X509_STORE_CTX */\n\nX509_STORE_CTX *X509_STORE_CTX_new(void);\n\nvoid X509_STORE_CTX_cleanup(X509_STORE_CTX *);\n\nvoid X509_STORE_CTX_free(X509_STORE_CTX *);\n\nint X509_STORE_CTX_init(X509_STORE_CTX *, X509_STORE *, X509 *,\n\n                        Cryptography_STACK_OF_X509 *);\n\nvoid X509_STORE_CTX_trusted_stack(X509_STORE_CTX *,\n\n                                  Cryptography_STACK_OF_X509 *);\n\nvoid X509_STORE_CTX_set0_trusted_stack(X509_STORE_CTX *,\n\n                                  Cryptography_STACK_OF_X509 *);\n\nvoid X509_STORE_CTX_set_cert(X509_STORE_CTX *, X509 *);\n\nvoid X509_STORE_CTX_set_chain(X509_STORE_CTX *,Cryptography_STACK_OF_X509 *);\n\nvoid X509_STORE_CTX_set0_untrusted(X509_STORE_CTX *,\n\n                                  Cryptography_STACK_OF_X509 *);\n\nX509_VERIFY_PARAM *X509_STORE_CTX_get0_param(X509_STORE_CTX *);\n\nvoid X509_STORE_CTX_set0_param(X509_STORE_CTX *, X509_VERIFY_PARAM *);\n\nint X509_STORE_CTX_set_default(X509_STORE_CTX *, const char *);\n\nvoid X509_STORE_CTX_set_verify_cb(X509_STORE_CTX *,\n\n                                  int (*)(int, X509_STORE_CTX *));\n\nCryptography_STACK_OF_X509 *X509_STORE_CTX_get_chain(X509_STORE_CTX *);\n\nCryptography_STACK_OF_X509 *X509_STORE_CTX_get1_chain(X509_STORE_CTX *);\n\nint X509_STORE_CTX_get_error(X509_STORE_CTX *);\n\nvoid X509_STORE_CTX_set_error(X509_STORE_CTX *, int);\n\nint X509_STORE_CTX_get_error_depth(X509_STORE_CTX *);\n\nX509 *X509_STORE_CTX_get_current_cert(X509_STORE_CTX *);\n\nint X509_STORE_CTX_set_ex_data(X509_STORE_CTX *, int, void *);\n\nvoid *X509_STORE_CTX_get_ex_data(X509_STORE_CTX *, int);\n\nint X509_STORE_CTX_get1_issuer(X509 **, X509_STORE_CTX *, X509 *);\n\n\n\n/* X509_VERIFY_PARAM */\n\nX509_VERIFY_PARAM *X509_VERIFY_PARAM_new(void);\n\nint X509_VERIFY_PARAM_set_flags(X509_VERIFY_PARAM *, unsigned long);\n\nint X509_VERIFY_PARAM_clear_flags(X509_VERIFY_PARAM *, unsigned long);\n\nunsigned long X509_VERIFY_PARAM_get_flags(X509_VERIFY_PARAM *);\n\nint X509_VERIFY_PARAM_set_purpose(X509_VERIFY_PARAM *, int);\n\nint X509_VERIFY_PARAM_set_trust(X509_VERIFY_PARAM *, int);\n\nvoid X509_VERIFY_PARAM_set_time(X509_VERIFY_PARAM *, time_t);\n\nint X509_VERIFY_PARAM_add0_policy(X509_VERIFY_PARAM *, ASN1_OBJECT *);\n\nint X509_VERIFY_PARAM_set1_policies(X509_VERIFY_PARAM *,\n\n                                    Cryptography_STACK_OF_ASN1_OBJECT *);\n\nvoid X509_VERIFY_PARAM_set_depth(X509_VERIFY_PARAM *, int);\n\nint X509_VERIFY_PARAM_get_depth(const X509_VERIFY_PARAM *);\n\nvoid X509_VERIFY_PARAM_free(X509_VERIFY_PARAM *);\n\n/* this CRYPTO_EX_DATA function became a macro in 1.1.0 */\n\nint X509_STORE_CTX_get_ex_new_index(long, void *, CRYPTO_EX_new *,\n\n                                    CRYPTO_EX_dup *, CRYPTO_EX_free *);\n\n\n\n/* X509_STORE_CTX */\n\nvoid X509_STORE_CTX_set0_crls(X509_STORE_CTX *,\n\n                              Cryptography_STACK_OF_X509_CRL *);\n\n\n\n/* X509_VERIFY_PARAM */\n\nint X509_VERIFY_PARAM_set1_host(X509_VERIFY_PARAM *, const char *,\n\n                                size_t);\n\nvoid X509_VERIFY_PARAM_set_hostflags(X509_VERIFY_PARAM *, unsigned int);\n\nint X509_VERIFY_PARAM_set1_email(X509_VERIFY_PARAM *, const char *,\n\n                                 size_t);\n\nint X509_VERIFY_PARAM_set1_ip(X509_VERIFY_PARAM *, const unsigned char *,\n\n                              size_t);\n\nint X509_VERIFY_PARAM_set1_ip_asc(X509_VERIFY_PARAM *, const char *);\n\n\n\nint sk_X509_OBJECT_num(Cryptography_STACK_OF_X509_OBJECT *);\n\nX509_OBJECT *sk_X509_OBJECT_value(Cryptography_STACK_OF_X509_OBJECT *, int);\n\nX509_VERIFY_PARAM *X509_STORE_get0_param(X509_STORE *);\n\nCryptography_STACK_OF_X509_OBJECT *X509_STORE_get0_objects(X509_STORE *);\n\nX509 *X509_OBJECT_get0_X509(X509_OBJECT *);\n\nint X509_OBJECT_get_type(const X509_OBJECT *);\n\n\n\n/* added in 1.1.0 */\n\nX509 *X509_STORE_CTX_get0_cert(X509_STORE_CTX *);\n\nX509_STORE_CTX_get_issuer_fn X509_STORE_get_get_issuer(X509_STORE *);\n\nvoid X509_STORE_set_get_issuer(X509_STORE *, X509_STORE_CTX_get_issuer_fn);\n\n'
CUSTOMIZATIONS = '\n\n#if CRYPTOGRAPHY_IS_LIBRESSL\n\nstatic const long Cryptography_HAS_110_VERIFICATION_PARAMS = 0;\n\n#ifndef X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\n\nstatic const long X509_CHECK_FLAG_NEVER_CHECK_SUBJECT = 0;\n\n#endif\n\n#else\n\nstatic const long Cryptography_HAS_110_VERIFICATION_PARAMS = 1;\n\n#endif\n\n\n\n#if CRYPTOGRAPHY_IS_LIBRESSL\n\nstatic const long Cryptography_HAS_X509_STORE_CTX_GET_ISSUER = 0;\n\ntypedef void *X509_STORE_CTX_get_issuer_fn;\n\nX509_STORE_CTX_get_issuer_fn (*X509_STORE_get_get_issuer)(X509_STORE *) = NULL;\n\nvoid (*X509_STORE_set_get_issuer)(X509_STORE *,\n\n                                  X509_STORE_CTX_get_issuer_fn) = NULL;\n\n#else\n\nstatic const long Cryptography_HAS_X509_STORE_CTX_GET_ISSUER = 1;\n\n#endif\n\n'